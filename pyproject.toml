[project]
name = "bioimageio.spec"
description = "Parser and validator library for bioimage.io specifications"
authors = [{ name = "Fynn BeuttenmÃ¼ller", email = "thefynnbe@gmail.com" }]
requires-python = ">=3.8"
dependencies = [
    "annotated-types>=0.5.0,<1",
    "email_validator",
    "exceptiongroup",            # TODO: remove when py3.11 is lowest supported version
    "genericache==0.5.2",
    "httpx",
    "imageio",
    "loguru",
    "markdown",
    "numpy>=1.21",
    "packaging>=17.0",
    "platformdirs",
    "pydantic-settings>=2.5,<3",
    "pydantic>=2.10.3,<2.12",
    "python-dateutil",
    "rich",
    "ruyaml",
    "tifffile>=2020.7.4",
    "tqdm",
    "typing-extensions",
    "zipp",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "deepdiff",
    "json_schema_for_humans",
    "jsonschema",
    "jupyter",
    "lxml",
    "pdoc",
    "pre-commit",
    "pyright==1.1.404",
    "pytest-cov",
    "pytest",
    "python-dotenv",
    "respx",
    "ruff",
]

[build-system]
requires = ["pip", "setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["bioimageio"]

[tool.setuptools.dynamic]
version = { attr = "bioimageio.spec.__version__" }

[tool.pyright]
exclude = [
    "**/__pycache__",
    "**/node_modules",
    "scripts/pdoc/original.py",
    "scripts/pdoc/patched.py",
    "bioimageio_cache",
    "tests/old_*",
]
include = ["bioimageio", "scripts", "tests"]
pythonPlatform = "All"
pythonVersion = "3.8"
reportDuplicateImport = "error"
reportImplicitStringConcatenation = "error"
reportImportCycles = true
reportIncompatibleMethodOverride = true
reportMatchNotExhaustive = "error"
reportMissingSuperCall = "error"
reportMissingTypeArgument = true
reportMissingTypeStubs = "warning"
reportPropertyTypeMismatch = true
reportUninitializedInstanceVariable = "error"
reportUnknownMemberType = false
reportUnnecessaryIsInstance = false
reportUnnecessaryTypeIgnoreComment = "error"
reportUnsupportedDunderAll = "error"
reportUnusedCallResult = "error"
reportUnusedClass = "error"
reportUnusedExpression = "error"
reportUnusedFunction = "error"
reportUnusedImport = "error"
reportUnusedVariable = "error"
reportWildcardImportFromLibrary = "error"
strictDictionaryInference = true
strictListInference = true
strictSetInference = true
typeCheckingMode = "strict"
useLibraryCodeForTypes = true

[tool.pytest.ini_options]
addopts = " --failed-first --doctest-modules"
testpaths = ["bioimageio/spec", "tests"]

[tool.ruff]
line-length = 88
target-version = "py38"
exclude = [
    "bioimageio_cache",
    "scripts/pdoc/original.py",
    "scripts/pdoc/patched.py",
]

[tool.coverage.report]
omit = [
    "bioimageio/spec/pretty_validation_errors.py",
    "bioimageio/spec/partner_utils/imjoy/*.py",
]
exclude_also = ["if TYPE_CHECKING:", "assert_never\\("]
