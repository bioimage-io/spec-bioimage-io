name: Test and Deploy bioimageio.spec

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
          - python-version: "3.8"
            test-format: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Get Date
        id: get-date
        run: |
          echo "week=$(/bin/date -u "+%Y-%U")" >> $GITHUB_OUTPUT
        shell: bash
      - uses: actions/cache@v3
        with:
          path: tests/cache
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ steps.get-date.outputs.week }}-${{ hashFiles('**/lockfiles') }}
      - name: Check autogenerated imports
        run: python scripts/generate_version_submodule_imports.py check
      - run: black --check .
        if: matrix.test-format
      - run: ruff check **/*.py # ignore notebooks for now
        if: matrix.test-format
      - run: pyright --version
      - run: pyright -p pyproject.toml --pythonversion ${{ matrix.python-version }}
      - run: pytest

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Generate spec docs
        run: python scripts/generate_spec_documentation.py --dist dist/user_docs
      - name: Generate JSON schemas
        run: python scripts/generate_json_schemas.py
      - id: get_version
        run: python -c 'import bioimageio.spec;print(f"version={bioimageio.spec.__version__}")' >> $GITHUB_OUTPUT
      - name: Generate developer docs
        run: |
          pdoc \
          --logo "https://bioimage.io/static/img/bioimage-io-logo.svg" \
          --logo-link "https://bioimage.io/" \
          --favicon "https://bioimage.io/static/img/bioimage-io-icon-small.svg" \
          --footer-text "bioimageio.spec ${{steps.get_version.outputs.version}}" \
          -o ./dist bioimageio.spec bioimageio.spec._internal
      - name: copy legacy file until BioImage.IO-packager is updated  # TODO: remove if packager does not depend on it anymore
        run: cp weight_formats_spec.json ./dist/weight_formats_spec.json
      - name: Get branch name to deploy to
        id: get_branch
        shell: bash
        run: |
          if [[ -n '${{ github.event.pull_request.head.ref }}' ]]; then branch=gh-pages-${{ github.event.pull_request.head.ref }}; else branch=gh-pages; fi
          echo "::set-output name=branch::$branch"
      - name: Deploy to ${{ steps.get_branch.outputs.branch }} ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: ${{ steps.get_branch.outputs.branch }}
          folder: dist

  mamba-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Conda environment with Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          cache-environment: true
          environment-name: build-env
          condarc: |
            channels:
            - conda-forge
          create-args: >-
            boa
      - name: linux conda build
        run: |
          conda mambabuild -c conda-forge conda-recipe
        shell: bash -l {0}

#  rattler-build:
#    name: Build package
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#    - name: Build conda package
#      uses: prefix-dev/rattler-build-action@v0.2.2
#      with:
#        recipe-path: conda-recipe/recipe.yaml
